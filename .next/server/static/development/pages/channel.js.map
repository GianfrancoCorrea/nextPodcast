{"version":3,"file":"static\\development\\pages\\channel.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Audio.jsx","webpack:///./components/ChannelGrid.jsx","webpack:///./components/Layout.jsx","webpack:///./components/PodcastListWithClick.jsx","webpack:///./components/podcastPlayer.jsx","webpack:///./helpers/slug.js","webpack:///./pages/_error.jsx","webpack:///./pages/channel.jsx","webpack:///./routes.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"nprogress\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"slugify\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Audio(props) {\r\n    const { clip } = props;\r\n    return (\r\n        <div className=\"player\">\r\n            <h3>{clip.title}</h3>\r\n            <h6>{clip.channel.title}</h6>\r\n            <audio controls autoPlay>\r\n                <source src={clip.urls.high_mp3} type=\"audio/mpeg\" />\r\n            </audio>\r\n\r\n            <style jsx>\r\n                {`\r\n        .player {\r\n          width: 100%;\r\n          position: fixed;\r\n          z-index: 110;\r\n          bottom: 0;\r\n          padding-top: 1em;\r\n          \r\n          background: #8756ca;\r\n          text-align: center;\r\n        }\r\n        h3 {\r\n          margin: 0;\r\n          padding-left: 1em;\r\n          padding-right: 1em;\r\n        }\r\n        h6 {\r\n          margin: 0;\r\n          margin-top: 1em;\r\n        }\r\n        audio {\r\n          margin-top: 1em;\r\n          width: 95%;\r\n          border-radius: 0;\r\n        }\r\n\r\n        `}\r\n\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Audio;\r\n\r\nAudio.propTypes = {\r\n    clip: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        channel: PropTypes.shape({\r\n            title: PropTypes.string,\r\n        }),\r\n        urls: PropTypes.shape({\r\n            high_mp3: PropTypes.string,\r\n        }),\r\n    }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Link } from '../routes';\r\nimport slug from '../helpers/slug';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ChannelGrid(props) {\r\n    const { channels, isFetching } = props;\r\n    const loader = (\r\n        <div>\r\n            <center><h2>nextPodcast</h2></center>\r\n            <div className=\"loader\">\r\n                <div className=\"bar1\" />\r\n                <div className=\"bar2\" />\r\n                <div className=\"bar3\" />\r\n                <div className=\"bar4\" />\r\n                <div className=\"bar5\" />\r\n                <div className=\"bar6\" />\r\n            </div>\r\n            <style jsx global>\r\n                {`\r\n                    body, html {\r\n                    background-color: #8756ca!important;\r\n                    height: 100%;\r\n                    position: relative;\r\n                    overflow: hidden;\r\n                    }\r\n                    header a {color: #8756ca!important;}\r\n                    h2 {\r\n                        margin: 0 auto;\r\n                    text-align: center;\r\n                    font-size: 20px;\r\n                    position: absolute;\r\n                    top: 40%;\r\n                    width: 100%;\r\n                    \r\n                    color: white;\r\n                    }\r\n                    .loader {\r\n                    margin: 0 auto;\r\n                    width: 60px;\r\n                    height: 50px;\r\n                    text-align: center;\r\n                    font-size: 10px;\r\n                    position: absolute;\r\n                    top: 50%;\r\n                    left: 50%;\r\n                    -webkit-transform: translateY(-50%) translateX(-50%);\r\n                    }\r\n                    .loader > div {\r\n                    height: 100%;\r\n                    width: 8px;\r\n                    display: inline-block;\r\n                    float: left;\r\n                    margin-left: 2px;\r\n                    -webkit-animation: delay 0.8s infinite ease-in-out;\r\n                    animation: delay 0.8s infinite ease-in-out;\r\n                    }\r\n                    .loader .bar1 {\r\n                    background-color: #754fa0;\r\n                    }\r\n                    .loader .bar2 {\r\n                    background-color: #09b7bf;\r\n                    -webkit-animation-delay: -0.7s;\r\n                    animation-delay: -0.7s;\r\n                    }\r\n                    .loader .bar3 {\r\n                    background-color: #90d36b;\r\n                    -webkit-animation-delay: -0.6s;\r\n                    animation-delay: -0.6s;\r\n                    }\r\n                    .loader .bar4 {\r\n                    background-color: #f2d40d;\r\n                    -webkit-animation-delay: -0.5s;\r\n                    animation-delay: -0.5s;\r\n                    }\r\n                    .loader .bar5 {\r\n                    background-color: #fcb12b;\r\n                    -webkit-animation-delay: -0.4s;\r\n                    animation-delay: -0.4s;\r\n                    }\r\n                    .loader .bar6 {\r\n                    background-color: #ed1b72;\r\n                    -webkit-animation-delay: -0.3s;\r\n                    animation-delay: -0.3s;\r\n                    }\r\n\r\n                    @-webkit-keyframes delay {\r\n                    0%, 40%, 100% {\r\n                        -webkit-transform: scaleY(0.05);\r\n                    }\r\n                    20% {\r\n                        -webkit-transform: scaleY(1);\r\n                    }\r\n                    }\r\n                    @keyframes delay {\r\n                    0%, 40%, 100% {\r\n                        transform: scaleY(0.05);\r\n                        -webkit-transform: scaleY(0.05);\r\n                    }\r\n                    20% {\r\n                        transform: scaleY(1);\r\n                        -webkit-transform: scaleY(1);\r\n                    }\r\n                    }\r\n                    `}\r\n\r\n            </style>\r\n        </div>\r\n    );\r\n\r\n    const channelsUI = (\r\n        <div className=\"channels\">\r\n            {channels.map(channel => (\r\n                <Link route=\"channel\" params={{ slug: slug(channel.title), id: channel.id }} key={channel.id} prefetch>\r\n                    <a className=\"channel\">\r\n                        <img src={channel.urls.logo_image.original} alt={channel.title} />\r\n                        <h2>{channel.title}</h2>\r\n                    </a>\r\n                </Link>\r\n            )) }\r\n            <style jsx>\r\n                {`   \r\n                        .channels {\r\n                        display: grid;\r\n                        grid-gap: 15px;\r\n                        padding: 15px;\r\n                        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n                        }\r\n                        a.channel {\r\n                        display: block;\r\n                        margin-bottom: 0.5em;\r\n                        color: #333;\r\n                        text-decoration: none;\r\n                        }\r\n                        .channel img {\r\n                        border-radius: 3px;\r\n                        box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n                        width: 100%;\r\n                        }\r\n                `}\r\n\r\n            </style>\r\n        </div>\r\n    );\r\n\r\n    return !isFetching ? channelsUI : loader;\r\n}\r\n\r\nexport default connect()(ChannelGrid);\r\n","import React from 'react';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\nimport NProgress from 'nprogress';\r\nimport Router from 'next/router';\r\nimport PropTypes from 'prop-types';\r\n\r\nRouter.onRouteChangeStart = () => {\r\n    NProgress.start();\r\n};\r\nRouter.onRouteChangeComplete = () => NProgress.done();\r\nRouter.onRouteChangeError = () => NProgress.done();\r\n\r\nexport default function Layout(props) {\r\n    const { children, title } = props;\r\n    return (\r\n        <div>\r\n            <Head>\r\n                <title>{title}</title>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n            </Head>\r\n            <header>\r\n                <Link href=\"/\"><a>nextPodcast</a></Link>\r\n            </header>\r\n            {children}\r\n\r\n            <style jsx>\r\n                {`\r\n                header {\r\n                    color: #fff;\r\n                    background: #8756ca;\r\n                    padding: 15px;\r\n                    text-align: center;\r\n                    font-weight: 600;\r\n                }\r\n                header a {\r\n                    color: #fff;\r\n                    text-decoration: none;\r\n                }\r\n                \r\n            `}\r\n\r\n            </style>\r\n            <style jsx global>\r\n                {`\r\n                        body{\r\n                            background: #fafafa;\r\n                            font-family: system-ui;\r\n                            margin: 0;\r\n                        }\r\n                `}\r\n\r\n            </style>\r\n            <style jsx global>\r\n                {`\r\n                /* Make clicks pass-through */\r\n                #nprogress {\r\n                pointer-events: none;\r\n                }\r\n\r\n                #nprogress .bar {\r\n                background: #29d;\r\n\r\n                position: fixed;\r\n                z-index: 1031;\r\n                top: 0;\r\n                left: 0;\r\n\r\n                width: 100%;\r\n                height: 2px;\r\n                }\r\n\r\n                /* Fancy blur effect */\r\n                #nprogress .peg {\r\n                display: block;\r\n                position: absolute;\r\n                right: 0px;\r\n                width: 100px;\r\n                height: 100%;\r\n                box-shadow: 0 0 10px #29d, 0 0 5px #29d;\r\n                opacity: 1.0;\r\n\r\n                -webkit-transform: rotate(3deg) translate(0px, -4px);\r\n                    -ms-transform: rotate(3deg) translate(0px, -4px);\r\n                        transform: rotate(3deg) translate(0px, -4px);\r\n                }\r\n\r\n                /* Remove these to get rid of the spinner */\r\n                #nprogress .spinner {\r\n                display: block;\r\n                position: fixed;\r\n                z-index: 1031;\r\n                top: 15px;\r\n                right: 15px;\r\n                }\r\n\r\n                #nprogress .spinner-icon {\r\n                width: 18px;\r\n                height: 18px;\r\n                box-sizing: border-box;\r\n\r\n                border: solid 2px transparent;\r\n                border-top-color: #29d;\r\n                border-left-color: #29d;\r\n                border-radius: 50%;\r\n\r\n                -webkit-animation: nprogress-spinner 400ms linear infinite;\r\n                        animation: nprogress-spinner 400ms linear infinite;\r\n                }\r\n\r\n                .nprogress-custom-parent {\r\n                overflow: hidden;\r\n                position: relative;\r\n                }\r\n\r\n                .nprogress-custom-parent #nprogress .spinner,\r\n                .nprogress-custom-parent #nprogress .bar {\r\n                position: absolute;\r\n                }\r\n\r\n                @-webkit-keyframes nprogress-spinner {\r\n                0%   { -webkit-transform: rotate(0deg); }\r\n                100% { -webkit-transform: rotate(360deg); }\r\n                }\r\n                @keyframes nprogress-spinner {\r\n                0%   { transform: rotate(0deg); }\r\n                100% { transform: rotate(360deg); }\r\n                }\r\n            `}\r\n\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\nLayout.defaultProps = {\r\n    title: 'nextPodcast',\r\n};\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\n","import React from 'react';\r\nimport slug from '../helpers/slug';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PodcastListWithClick(props) {\r\n    const { podcasts, onClickPodcast } = props;\r\n\r\n    return (\r\n        <div>\r\n            { podcasts.map(podcast => (\r\n                <a\r\n                    href={`/${slug(podcast.channel.title)}.${podcast.channel.id}/${slug(podcast.title)}.${podcast.id}`}\r\n                    className=\"podcast\"\r\n                    key={podcast.id}\r\n                    onClick={event => onClickPodcast(event, podcast)}\r\n                >\r\n                    <h3>{ podcast.title }</h3>\r\n                    <div className=\"meta\">\r\n                        { Math.ceil(podcast.duration / 60) }\r\n                        {' '}\r\n                          minutes\r\n                    </div>\r\n                </a>\r\n            )) }\r\n\r\n            <style jsx>\r\n                {`\r\n        .podcast {\r\n          display: block;\r\n          text-decoration: none;\r\n          color: #333;\r\n          padding: 15px;\r\n          border-bottom: 1px solid rgba(0,0,0,0.2);\r\n          cursor: pointer;\r\n        }\r\n        .podcast:hover {\r\n          color: #000;\r\n        }\r\n        .podcast h3 {\r\n          margin: 0;\r\n        }\r\n        .podcast .meta {\r\n          color: #666;\r\n          margin-top: 0.5em;\r\n          font-size: 0.8em;\r\n        }\r\n      `}\r\n\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\n\r\nPodcastListWithClick.propTypes = {\r\n    podcasts: PropTypes.PropTypes.arrayOf(PropTypes.shape({\r\n        title: PropTypes.string,\r\n        id: PropTypes.number,\r\n        duration: PropTypes.number,\r\n        channel: PropTypes.shape({\r\n            id: PropTypes.number,\r\n        }),\r\n    })).isRequired,\r\n    onClickPodcast: PropTypes.func.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport { Link } from '../routes';\r\nimport slug from '../helpers/slug';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function PodcastPlayer(props) {\r\n    const {\r\n        clip, onClose, children, minimized,\r\n    } = props;\r\n\r\n    const modalState = !minimized ? 'modal' : 'hidden';\r\n    return (\r\n        <div className={modalState}>\r\n            <div className=\"clip\">\r\n                <nav>\r\n                    { onClose\r\n                        ? (\r\n                            <a onClick={onClose}>\r\n                                <b>\r\n                                    <span role=\"img\" aria-label=\"arrow\">⏬ </span>\r\n                                  Minimize\r\n                                </b>\r\n\r\n                            </a>\r\n                        )\r\n                        : (\r\n                            <Link\r\n                                route=\"channel\"\r\n                                params={{ slug: slug(clip.channel.title), id: clip.channel.id }}\r\n                                prefetch\r\n                            >\r\n                                <a className=\"close\">&lt; Volver</a>\r\n                            </Link>\r\n                        )\r\n                    }\r\n                </nav>\r\n\r\n                <picture>\r\n                    <div style={{ backgroundImage: `url(${clip.urls.image || clip.channel.urls.logo_image.original})` }} />\r\n                </picture>\r\n\r\n            </div>\r\n\r\n            {children}\r\n            <style jsx>\r\n                {`\r\n        nav {\r\n          background: none;\r\n        }\r\n        nav a {\r\n          display: inline-block;\r\n          padding: 15px;\r\n          color: white;\r\n          cursor: pointer;\r\n          text-decoration: none;\r\n        }\r\n        .clip {\r\n          display: flex;\r\n          height: 100%;\r\n          flex-direction: column;\r\n          background: #8756ca;\r\n          color: white;\r\n          z-index: 100;\r\n        }\r\n        .hidden .clip {\r\n            display: none\r\n        }\r\n        picture {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          flex: 1 1;\r\n          flex-direction: column;\r\n          width: auto;\r\n          padding: 10%;\r\n        }\r\n        picture div {\r\n          width: 100%;\r\n          height: 100%;\r\n          background-position: 50% 50%;\r\n          background-size: contain;\r\n          background-repeat: no-repeat;\r\n        }\r\n\r\n        .modal {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          z-index: 99999;\r\n        }\r\n      `}\r\n\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\nPodcastPlayer.defaultProps = {\r\n    onClose: null,\r\n    minimized: null,\r\n};\r\nPodcastPlayer.propTypes = {\r\n    clip: PropTypes.shape({\r\n        channel: PropTypes.shape({\r\n            id: PropTypes.number,\r\n            title: PropTypes.string,\r\n            urls: PropTypes.shape({\r\n                logo_image: PropTypes.shape({\r\n                    original: PropTypes.string,\r\n                }),\r\n                image: PropTypes.string,\r\n            }),\r\n        }),\r\n\r\n    }).isRequired,\r\n    onClose: PropTypes.func,\r\n    children: PropTypes.node.isRequired,\r\n    minimized: PropTypes.bool,\r\n};\r\n\r\n","import slugify from 'slugify';\r\n\r\nexport default function slug(name) {\r\n    return slugify(name, { lower: true }).replace(/[^\\w\\-]+/g, '');\r\n}\r\n","import React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\n\r\nexport default class Error extends React.Component {\r\n    static getInitialProps({ res, err }) {\r\n        const { statusCode } = res || (err && err);\r\n        // const statusCode = res ? res.statusCode : err ? err.statusCode : null;\r\n        return { statusCode };\r\n    }\r\n\r\n    render() {\r\n        const { statusCode } = this.props;\r\n\r\n        return (\r\n            <Layout title=\"Oh no :(\">\r\n                { statusCode === 404\r\n                    ? (\r\n                        <div className=\"message\">\r\n                            <h1>Page not found :(</h1>\r\n                            <p><Link href=\"/\"><a>Back home</a></Link></p>\r\n\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <div className=\"message\">\r\n                            <h1>An error occurred :(</h1>\r\n                            <p><Link href=\"/\"><a>Back home</a></Link></p>\r\n                        </div>\r\n                    )}\r\n\r\n                <style jsx>\r\n                    {`\r\n                .message {\r\n                    padding: 100px 30px;\r\n                    text-align: center;\r\n                }\r\n                h1 {\r\n                    margin-bottom: 2em;\r\n                }\r\n                a {\r\n                    color: #8756ca\r\n                }\r\n        `}\r\n\r\n                </style>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport 'isomorphic-fetch';\r\nimport Layout from '../components/Layout';\r\nimport ChannelGrid from '../components/ChannelGrid';\r\nimport Error from './_error';\r\nimport PodcastListWithClick from '../components/PodcastListWithClick';\r\nimport PodcastPlayer from '../components/podcastPlayer';\r\nimport Audio from '../components/Audio';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Channel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { openPodcast: null, minimized: false };\r\n    }\r\n\r\n    static async getInitialProps({ query, res }) {\r\n        try {\r\n            const idChannel = query.id;\r\n\r\n            const [requestChannel, requestSeries, requestAudios] = await Promise.all([\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n            ]);\r\n            if (requestChannel.status >= 404) {\r\n                res.statusCode = requestChannel.status;\r\n                return {\r\n                    channel: null, series: null, audioClips: null, statusCode: 404,\r\n                };\r\n            }\r\n\r\n            const dataChannel = await requestChannel.json();\r\n            const { channel } = dataChannel.body;\r\n\r\n            const dataSeries = await requestSeries.json();\r\n            const series = dataSeries.body.channels;\r\n\r\n            const dataAudios = await requestAudios.json();\r\n            const audioClips = dataAudios.body.audio_clips;\r\n\r\n            return {\r\n                channel, series, audioClips, statusCode: 200,\r\n            };\r\n        } catch (e) {\r\n            return {\r\n                channel: null, series: null, audioClips: null, statusCode: 503,\r\n            };\r\n        }\r\n    }\r\n\r\n    openPodcast = (event, podcast) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            openPodcast: podcast,\r\n        });\r\n    }\r\n\r\n    closePodcast = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            minimized: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            channel, series, audioClips, statusCode,\r\n        } = this.props;\r\n        const { openPodcast, minimized } = this.state;\r\n\r\n        if (statusCode !== 200) {\r\n            return <Error statusCode={statusCode} />;\r\n        }\r\n\r\n        return (\r\n            <Layout title={channel.title}>\r\n                <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\r\n                <h1>{ channel.title }</h1>\r\n                { series.length > 0\r\n                    && (\r\n                        <div className=\"series\">\r\n                            <h2>Series</h2>\r\n                            <ChannelGrid channels={series} />\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"lastPodcasts\">\r\n                    <h2>Ultimos Podcasts</h2>\r\n                    <PodcastListWithClick podcasts={audioClips} onClickPodcast={this.openPodcast} />\r\n                </div>\r\n\r\n                {openPodcast\r\n                && (\r\n                    <PodcastPlayer\r\n                        clip={openPodcast}\r\n                        onClose={this.closePodcast}\r\n                        minimized={minimized}\r\n                    >\r\n                        <Audio\r\n                            clip={openPodcast}\r\n                            minimized={minimized}\r\n                            onClose={this.closePodcast}\r\n                        />\r\n                    </PodcastPlayer>\r\n                )}\r\n                <style jsx>\r\n                    {`\r\n                    .banner {\r\n                        width: 100%;\r\n                        padding-botconst 25%;\r\n                        background-consttion: 50% 50%;\r\n                        background-const: cover;\r\n                        background-constr: #aaa;\r\n                    }\r\n\r\n                    h1 {\r\n                        font-weight: 600;\r\n                        padding: 15px;\r\n                    }\r\n                    h2 {\r\n                       padding: 5px;\r\n                       font-size: 0.9em;\r\n                       font-weight: 600;\r\n                       margin: 0;\r\n                       text-align: center;\r\n                       }\r\n                `}\r\n\r\n                </style>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nChannel.defaultProps = {\r\n    series: null,\r\n};\r\nChannel.propTypes = {\r\n    statusCode: PropTypes.number.isRequired,\r\n    audioClips: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    series: PropTypes.arrayOf(PropTypes.shape({})),\r\n    channel: PropTypes.shape({}).isRequired,\r\n};\r\n\r\n","const routes = require('next-routes')\r\n\r\nmodule.exports = routes()\r\n.add('index')\r\n.add('channel', '/:slug.:id', 'channel')\r\n.add('podcast', '/:slugChannel.:idChannel/:slug.:id', 'podcast')\r\n\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"nprogress\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"slugify\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAuCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AARA;AAAA;AAAA;AAsGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAJA;AADA;AAAA;AAAA;AAkCA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AA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","sourceRoot":""}