{"version":3,"file":"static/development/pages/channel.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ChannelGrid.jsx","webpack:///./components/Layout.jsx","webpack:///./components/PodcastListWithClick.jsx","webpack:///./components/podcastPlayer.jsx","webpack:///./helpers/slug.js","webpack:///./pages/_error.jsx","webpack:///./pages/channel.jsx","webpack:///./routes.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"nprogress\"","webpack:///external \"react\"","webpack:///external \"slugify\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { Link } from '../routes';\nimport slug from '../helpers/slug'\nexport default class ChannelGrid extends React.Component {\n    render() {\n        const { channels } = this.props\n\n        return <div className=\"channels\">\n            {channels.map((channel, key) => (\n                <Link route=\"channel\" params={{ slug: slug(channel.title), id: channel.id }}  key={key} prefetch>\n                    <a className=\"channel\"  >\n                        <img src={channel.urls.logo_image.original} alt={channel.title} />\n                        <h2>{channel.title}</h2>\n                    </a>\n                </Link>\n            ))}\n\n            <style jsx>{`   \n                       .channels {\n                       display: grid;\n                       grid-gap: 15px;\n                       padding: 15px;\n                       grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n                       }\n                       a.channel {\n                       display: block;\n                       margin-bottom: 0.5em;\n                       color: #333;\n                       text-decoration: none;\n                       }\n                       .channel img {\n                       border-radius: 3px;\n                       box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n                       width: 100%;\n                       }\n                       \n               `}</style>\n        </div>\n    }\n}","import Link from 'next/link';\nimport Head from 'next/head';\nimport NProgress from 'nprogress'\nimport Router from 'next/router'\nRouter.onRouteChangeStart = (url) => {\n    NProgress.start()\n}\nRouter.onRouteChangeComplete = () => NProgress.done()\nRouter.onRouteChangeError = () => NProgress.done()\n\nexport default class Layout extends React.Component {\n    render() {\n        const { children, title } = this.props\n        return <div>\n            <Head>\n                <title>{title}</title>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n            </Head>\n            <header>\n                <Link href=\"/\"><a>nextPodcast</a></Link>\n            </header>\n            {children}\n\n            <style jsx>{`\n                header {\n                    color: #fff;\n                    background: #8756ca;\n                    padding: 15px;\n                    text-align: center;\n                    font-weight: 600;\n                }\n                header a {\n                    color: #fff;\n                    text-decoration: none;\n                }\n                \n            `}</style>\n            <style jsx global>{`\n                        body{\n                            background: #fafafa;\n                            font-family: system-ui;\n                            margin: 0;\n                        }\n                `}</style>\n            <style jsx global>{`\n                /* Make clicks pass-through */\n                #nprogress {\n                pointer-events: none;\n                }\n\n                #nprogress .bar {\n                background: #29d;\n\n                position: fixed;\n                z-index: 1031;\n                top: 0;\n                left: 0;\n\n                width: 100%;\n                height: 2px;\n                }\n\n                /* Fancy blur effect */\n                #nprogress .peg {\n                display: block;\n                position: absolute;\n                right: 0px;\n                width: 100px;\n                height: 100%;\n                box-shadow: 0 0 10px #29d, 0 0 5px #29d;\n                opacity: 1.0;\n\n                -webkit-transform: rotate(3deg) translate(0px, -4px);\n                    -ms-transform: rotate(3deg) translate(0px, -4px);\n                        transform: rotate(3deg) translate(0px, -4px);\n                }\n\n                /* Remove these to get rid of the spinner */\n                #nprogress .spinner {\n                display: block;\n                position: fixed;\n                z-index: 1031;\n                top: 15px;\n                right: 15px;\n                }\n\n                #nprogress .spinner-icon {\n                width: 18px;\n                height: 18px;\n                box-sizing: border-box;\n\n                border: solid 2px transparent;\n                border-top-color: #29d;\n                border-left-color: #29d;\n                border-radius: 50%;\n\n                -webkit-animation: nprogress-spinner 400ms linear infinite;\n                        animation: nprogress-spinner 400ms linear infinite;\n                }\n\n                .nprogress-custom-parent {\n                overflow: hidden;\n                position: relative;\n                }\n\n                .nprogress-custom-parent #nprogress .spinner,\n                .nprogress-custom-parent #nprogress .bar {\n                position: absolute;\n                }\n\n                @-webkit-keyframes nprogress-spinner {\n                0%   { -webkit-transform: rotate(0deg); }\n                100% { -webkit-transform: rotate(360deg); }\n                }\n                @keyframes nprogress-spinner {\n                0%   { transform: rotate(0deg); }\n                100% { transform: rotate(360deg); }\n                }\n            `}</style>\n        </div>\n    }\n}","import slug from '../helpers/slug'\n\nexport default class extends React.Component {\n  render() {\n    const { podcasts, onClickPodcast } = this.props\n\n    return <div>\n      { podcasts.map((podcast) => (\n        <a href={`/${slug(podcast.channel.title)}.${podcast.channel.id}/${slug(podcast.title)}.${podcast.id}`}\n          className='podcast' key={podcast.id}\n          onClick={ (event) => onClickPodcast(event, podcast) }>\n          <h3>{ podcast.title }</h3>\n          <div className='meta'>\n            { Math.ceil(podcast.duration / 60) } minutes\n          </div>\n        </a>\n      )) }\n\n      <style jsx>{`\n        .podcast {\n          display: block;\n          text-decoration: none;\n          color: #333;\n          padding: 15px;\n          border-bottom: 1px solid rgba(0,0,0,0.2);\n          cursor: pointer;\n        }\n        .podcast:hover {\n          color: #000;\n        }\n        .podcast h3 {\n          margin: 0;\n        }\n        .podcast .meta {\n          color: #666;\n          margin-top: 0.5em;\n          font-size: 0.8em;\n        }\n      `}</style>\n    </div>\n  }\n}","import { Link } from '../routes'\nimport slug from '../helpers/slug'\n\nexport default class PodcastPlayer extends React.Component {\n  render() {\n    const { clip, onClose } = this.props\n\n    return <div className=\"modal\">\n      <div className='clip'>\n        <nav>\n          { onClose ?\n            <a onClick={onClose}>&lt; Volver</a>\n            :\n            <Link route='channel' \n              params={{ slug: slug(clip.channel.title), id: clip.channel.id }} \n              prefetch>\n              <a className='close'>&lt; Volver</a>\n            </Link>\n          }\n        </nav>\n\n        <picture>\n          <div style={{ backgroundImage: `url(${clip.urls.image || clip.channel.urls.logo_image.original})` }} />\n        </picture>\n\n        <div className='player'>\n          <h3>{ clip.title }</h3>\n          <h6>{ clip.channel.title }</h6>\n          <audio controls autoPlay={true}>\n            <source src={clip.urls.high_mp3} type='audio/mpeg' />\n          </audio>\n        </div>\n      </div>\n\n      <style jsx>{`\n        nav {\n          background: none;\n        }\n        nav a {\n          display: inline-block;\n          padding: 15px;\n          color: white;\n          cursor: pointer;\n          text-decoration: none;\n        }\n        .clip {\n          display: flex;\n          height: 100%;\n          flex-direction: column;\n          background: #8756ca;\n          color: white;\n        }\n        picture {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex: 1 1;\n          flex-direction: column;\n          width: auto;\n          padding: 10%;\n        }\n        picture div {\n          width: 100%;\n          height: 100%;\n          background-position: 50% 50%;\n          background-size: contain;\n          background-repeat: no-repeat;\n        }\n        .player {\n          padding: 30px;\n          background: rgba(0,0,0,0.3);\n          text-align: center;\n        }\n        h3 {\n          margin: 0;\n        }\n        h6 {\n          margin: 0;\n          margin-top: 1em;\n        }\n        audio {\n          margin-top: 2em;\n          width: 100%;\n        }\n\n        .modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 99999;\n        }\n      `}</style>\n    </div>\n  }\n}","import slugify from 'slugify';\n\nexport default function slug(name) {\n    return slugify(name, {lower: true}).replace(/[^\\w\\-]+/g, '')\n}","import React from'react';\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\n\nexport default class Error extends React.Component{\n  static getInitialProps({ res, err }) {\n    const statusCode = res ? res.statusCode : err ? err.statusCode : null;\n    return { statusCode }\n  }\n\n  render() {\n    const { statusCode } = this.props\n\n    return (\n      <Layout title=\"Oh no :(\">\n        { statusCode == 404 ?\n            <div className=\"message\">\n                <h1>Page not found :(</h1>\n                <p><Link href=\"/\"><a>Back home</a></Link></p>\n\n            </div>\n        :\n        <div className=\"message\">\n            <h1>An error occurred :(</h1>\n            <p><Link href=\"/\"><a>Back home</a></Link></p>\n        </div>}\n\n        <style jsx>{`\n                .message {\n                    padding: 100px 30px;\n                    text-align: center;\n                }\n                h1 {\n                    margin-bottom: 2em;\n                }\n                a {\n                    color: #8756ca\n                }\n        `}</style>\n      </Layout>\n    )\n  }\n}","import 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from './_error'\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport PodcastPlayer from '../components/podcastPlayer';\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { openPodcast: null }\n    }\n\n    static async getInitialProps({ query, res }) {\n        try {\n            let idChannel = query.id\n\n            let [requestChannel, requestSeries, requestAudios] = await Promise.all([\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n                ]);\n                \n            if( requestChannel.status >= 404 ) {\n                res.statusCode = requestChannel.status\n                return { channel: null, series: null, audioClips: null, statusCode: 404 }\n            }\n\n            let dataChannel = await requestChannel.json();\n            let channel = dataChannel.body.channel;\n\n            let dataSeries = await requestSeries.json();\n            let series = dataSeries.body.channels;\n\n            let dataAudios = await requestAudios.json();\n            let audioClips = dataAudios.body.audio_clips;\n\n            return { channel, series, audioClips, statusCode: 200 }\n        } catch(e){\n            return { channel: null, series: null, audioClips: null, statusCode: 503 }\n        }\n    }\n\n    openPodcast = (event, podcast) => {\n        event.preventDefault();\n        this.setState({\n            openPodcast: podcast\n        })\n    }\n\n    closePodcast = (event) => {\n        event.preventDefault()\n        this.setState({\n            openPodcast: null\n        })\n    }\n\n    render() {\n        const { channel, series, audioClips, statusCode } = this.props\n        const { openPodcast } = this.state\n\n        if( statusCode !== 200 ) {\n            return <Error statusCode={ statusCode }/>\n        }\n\n        return (\n            <Layout title={channel.title}>\n                <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n                {openPodcast && <PodcastPlayer clip={ openPodcast } onClose={ this.closePodcast }/>}\n                <h1>{ channel.title }</h1>\n                { series.length > 0 &&\n                    <div className=\"series\">\n                    <h2>Series</h2>\n                        <ChannelGrid channels={ series } />\n                    </div>\n                }\n                <div className=\"lastPodcasts\">\n                    <h2>Ultimos Podcasts</h2>\n                    <PodcastListWithClick podcasts={ audioClips } onClickPodcast={this.openPodcast}/>\n                </div>\n\n                <style jsx>{`\n                    .banner {\n                        width: 100%;\n                        padding-bottom: 25%;\n                        background-position: 50% 50%;\n                        background-size: cover;\n                        background-color: #aaa;\n                    }\n\n                    h1 {\n                        font-weight: 600;\n                        padding: 15px;\n                    }\n                    h2 {\n                       padding: 5px;\n                       font-size: 0.9em;\n                       font-weight: 600;\n                       margin: 0;\n                       text-align: center;\n                       }\n                `}</style>\n        </Layout>\n        )\n    }\n}","const routes = require('next-routes')\n\nmodule.exports = routes()\n.add('index')\n.add('channel', '/:slug.:id', 'channel')\n.add('podcast', '/:slugChannel.:idChannel/:slug.:id', 'podcast')\n\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"nprogress\");","module.exports = require(\"react\");","module.exports = require(\"slugify\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAAA;;;;;;;;;;;;;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAJA;AADA;AAAA;AAAA;AA+BA;;;;AAnCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2GA;;;;AA9GA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAGA;AAAA;AACA;AAAA;AALA;AADA;AAAA;AAAA;AAkCA;;;;AAtCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAwFA;;;;AA5FA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAMA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AA2BA;;;AApCA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;AAJA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoCA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAzCA;AA2CA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA9CA;AAAA;AAAA;AAFA;AAGA;AACA;;;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAZA;AAAA;AAAA;AAsCA;;;;;;;;;;;;;AA3FA;;AAEA;;AAEA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAlCA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}